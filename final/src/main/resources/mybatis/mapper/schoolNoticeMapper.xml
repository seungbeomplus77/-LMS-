<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sp.app.mapper.SchoolNoticeMapper">

  <!-- 공지사항 글 등록 -->
  <insert id="insertSchoolNotice" parameterType="com.sp.app.model.SchoolNotice">
    INSERT INTO schoolNotice 
      (schoolNoticeNum, subject, content, hitCount, saveFilename, originalFilename, reg_date, modify_date, showSchoolNotice, schoolId, categoryId)
    VALUES 
      (schoolNotice_seq.nextval, #{subject}, #{content}, #{hitCount}, #{saveFilename}, #{originalFilename}, SYSDATE, SYSDATE, #{showSchoolNotice}, #{schoolId}, #{categoryId})
  </insert>
  
  <!-- 공지사항 글 수정 -->
  <update id="updateSchoolNotice" parameterType="com.sp.app.model.SchoolNotice">
    UPDATE schoolNotice
    SET subject = #{subject},
        content = #{content},
        hitCount = #{hitCount},
        saveFilename = #{saveFilename},
        originalFilename = #{originalFilename},
        modify_date = SYSDATE,
        showSchoolNotice = #{showSchoolNotice},
        categoryId = #{categoryId}
    WHERE schoolNoticeNum = #{schoolNoticeNum}
  </update>
  
  <!-- 공지사항 글 삭제 -->
  <delete id="deleteSchoolNotice" parameterType="long">
    DELETE FROM schoolNotice
    WHERE schoolNoticeNum = #{schoolNoticeNum}
  </delete>
  
  <!-- 단건 조회 (PK 기준) -->
  <select id="findSchoolNoticeById" parameterType="long" resultType="com.sp.app.model.SchoolNotice">
    SELECT sn.schoolNoticeNum,
           sn.subject,
           sn.content,
           sn.hitCount,
           sn.saveFilename,
           sn.originalFilename,
           TO_CHAR(sn.reg_date, 'YYYY-MM-DD') AS reg_date,
           TO_CHAR(sn.modify_date, 'YYYY-MM-DD') AS modify_date,
           sn.showSchoolNotice,
           sn.schoolId,
           sn.categoryId,
           sc.categoryName,
           sc.showCategory
    FROM schoolNotice sn
    LEFT JOIN schoolNoticeCategory sc
      ON sn.categoryId = sc.categoryId
    WHERE sn.schoolNoticeNum = #{schoolNoticeNum}
  </select>
  
  <!-- 조건에 따른 공지사항 글 목록 조회 -->
  <select id="listSchoolNotice" parameterType="map" resultType="com.sp.app.model.SchoolNotice">
    SELECT sn.schoolNoticeNum,
           sn.subject,
           sn.content,
           sn.hitCount,
           sn.saveFilename,
           sn.originalFilename,
           TO_CHAR(sn.reg_date, 'YYYY-MM-DD') AS reg_date,
           TO_CHAR(sn.modify_date, 'YYYY-MM-DD') AS modify_date,
           sn.showSchoolNotice,
           sn.schoolId,
           sn.categoryId,
           sc.categoryName,
           sc.showCategory
    FROM schoolNotice sn
    LEFT JOIN schoolNoticeCategory sc
      ON sn.categoryId = sc.categoryId
    <where>
      <if test="schoolId != null">
        AND sn.schoolId = #{schoolId}
      </if>
      <if test="categoryId != null">
        AND sn.categoryId = #{categoryId}
      </if>
      <if test="keyword != null and keyword != ''">
        AND sn.subject LIKE '%' || #{keyword} || '%'
      </if>
    </where>
    ORDER BY sn.schoolNoticeNum DESC
  </select>
  
  <!-- 데이터 건수 조회 (페이징 등) -->
  <select id="dataCount" parameterType="map" resultType="int">
    SELECT COUNT(*)
    FROM schoolNotice sn
    <where>
      <if test="schoolId != null">
        AND sn.schoolId = #{schoolId}
      </if>
      <if test="categoryId != null">
        AND sn.categoryId = #{categoryId}
      </if>
      <if test="keyword != null and keyword != ''">
        AND sn.subject LIKE '%' || #{keyword} || '%'
      </if>
    </where>
  </select>
  
  <!-- 조회수 업데이트 -->
  <update id="updateHitCount" parameterType="long">
    UPDATE schoolNotice
    SET hitCount = hitCount + 1
    WHERE schoolNoticeNum = #{schoolNoticeNum}
  </update>
  
  <!-- 이전 글 조회 -->
  <select id="findByPrev" parameterType="map" resultType="com.sp.app.model.SchoolNotice">
    SELECT *
    FROM (
      SELECT sn.schoolNoticeNum,
             sn.subject,
             sn.content,
             sn.hitCount,
             sn.saveFilename,
             sn.originalFilename,
             TO_CHAR(sn.reg_date, 'YYYY-MM-DD') AS reg_date,
             TO_CHAR(sn.modify_date, 'YYYY-MM-DD') AS modify_date,
             sn.showSchoolNotice,
             sn.schoolId,
             sn.categoryId,
             sc.categoryName,
             sc.showCategory
      FROM schoolNotice sn
      LEFT JOIN schoolNoticeCategory sc
        ON sn.categoryId = sc.categoryId
      <where>
         <if test="schoolNoticeNum != null">
           AND sn.schoolNoticeNum &lt; #{schoolNoticeNum}
         </if>
         <if test="keyword != null and keyword != ''">
           AND sn.subject LIKE '%' || #{keyword} || '%'
         </if>
      </where>
      ORDER BY sn.schoolNoticeNum DESC
    )
    WHERE ROWNUM = 1
  </select>
  
  <!-- 다음 글 조회 -->
  <select id="findByNext" parameterType="map" resultType="com.sp.app.model.SchoolNotice">
    SELECT *
    FROM (
      SELECT sn.schoolNoticeNum,
             sn.subject,
             sn.content,
             sn.hitCount,
             sn.saveFilename,
             sn.originalFilename,
             TO_CHAR(sn.reg_date, 'YYYY-MM-DD') AS reg_date,
             TO_CHAR(sn.modify_date, 'YYYY-MM-DD') AS modify_date,
             sn.showSchoolNotice,
             sn.schoolId,
             sn.categoryId,
             sc.categoryName,
             sc.showCategory
      FROM schoolNotice sn
      LEFT JOIN schoolNoticeCategory sc
        ON sn.categoryId = sc.categoryId
      <where>
         <if test="schoolNoticeNum != null">
           AND sn.schoolNoticeNum &gt; #{schoolNoticeNum}
         </if>
         <if test="keyword != null and keyword != ''">
           AND sn.subject LIKE '%' || #{keyword} || '%'
         </if>
      </where>
      ORDER BY sn.schoolNoticeNum ASC
    )
    WHERE ROWNUM = 1
  </select>
  
</mapper>
