<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sp.app.mapper.CommunityReplyMapper">
  
  <!-- 시퀀스 값 반환 -->
  <select id="CommunitySeq" resultType="long">
    SELECT communityReply_seq.NEXTVAL FROM dual
  </select>


	<!-- 댓글/답글 등록 -->
	<insert id="insertCommunityReply" parameterType="com.sp.app.model.CommunityReply">
	    INSERT INTO communityReply 
	        (replyNum, communityNum, studentId, content, reg_date, parentNum, showReply, showCommunityReply)
	    VALUES 
	        (communityReply_seq.nextval, #{communityNum}, #{studentId}, #{content}, SYSDATE, #{parentNum}, 1, 0)
	</insert>

  <sql id="where-list">
    <if test="schType=='all' ">
      ( INSTR(subject, #{kwd}) &gt; 0
        OR DBMS_LOB.INSTR(content, #{kwd}) &gt; 0 )
    </if>
    <if test="schType=='subject' ">
      INSTR(subject, #{kwd}) &gt; 0
    </if>
    <if test="schType=='content' ">
      DBMS_LOB.INSTR(content, #{kwd}) &gt; 0
    </if>
    <if test="schType=='reg_date' ">
      ( TO_CHAR(c.reg_date, 'YYYYMMDD') = #{kwd}
        OR TO_CHAR(c.reg_date, 'YYYY-MM-DD') = #{kwd} )
    </if>
  </sql>
 
  <!-- 댓글 데이터 건수 조회 -->
  <select id="dataCount" parameterType="map" resultType="int">
    SELECT NVL(COUNT(*), 0) 
    FROM communityReply c
    JOIN schoolMember m ON c.studentId = m.userId
    <where>
    	c.communityNum = #{communityNum}
      <if test="kwd != null and kwd != '' ">
        <include refid="where-list"/>
      </if>
    </where>
  </select>
  
  <!-- 댓글 목록 조회 -->
	<select id="listCommunityReply" parameterType="map" resultType="com.sp.app.model.CommunityReply">
	    SELECT 
	        c.replyNum,
	        c.communityNum,
	        c.studentId,
	        c.content,
	        c.reg_date,
	        c.groupNum,
	        c.orderNo,
	        c.depth,
	        (
	            SELECT COUNT(*)
	            FROM communityReply r
	            WHERE r.parentNum = c.replyNum
	              AND r.block = 0  -- block = 0
	        ) AS answerCount
	    FROM communityReply c
	    JOIN schoolMember m ON c.studentId = m.userId
	    <where>
	        c.communityNum = #{communityNum}
	        <if test="kwd != null and kwd != '' ">
	            <include refid="where-list"/>
	        </if>
	    </where>
	    ORDER BY c.groupNum DESC, c.orderNo ASC
	    OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>

  
  <!-- 댓글 단건 조회 -->
  <select id="findById" parameterType="long" resultType="com.sp.app.model.CommunityReply">
    SELECT replyNum, communityNum, studentId, content,
           TO_CHAR(reg_date, 'YYYY-MM-DD') AS reg_date,
           groupNum, depth, orderNo, parent
    FROM communityReply c
    JOIN schoolMember m ON c.studentId = m.userId
    WHERE replyNum = #{replyNum}
  </select>
    
    <select id="replyAnswerCount" parameterType="map"
          resultType="Integer">
    SELECT NVL(COUNT(*), 0)
    FROM communityReply
    WHERE parentNum = #{parentNum} AND block = 0
    <if test="schoolId == 10">
      AND ( showReply = 1 OR ( showReply = 0 AND studentId = #{studentId} ))
    </if>
  </select>  	
   
   <!-- 답글 리스트 -->
  <select id="listReplyAnswer" parameterType="map"
          resultType="com.sp.app.model.CommunityReply">
    SELECT replyNum, communityNum, r.studentId, content,
           reg_date, parentNum, showReply
    FROM communityReply r

    JOIN schoolMember m ON r.studentId = m.userId AND block = 0
    WHERE parentNum = #{parentNum}
    <if test="schoolId == 10">
      AND ( showReply = 1 OR ( showReply = 0 AND r.studentId = #{studentId} ))
    </if>
    ORDER BY replyNum DESC
  </select>
 
  <!-- (옵션) 댓글 조회수 증가 (hitCount 필드가 있다면) -->
  <update id="updateHitCount" parameterType="long">
    UPDATE communityReply
    SET hitCount = hitCount + 1
    WHERE replyNum = #{replyNum}
  </update>
	
	<!-- 이전글 -->
	<select id="findByPrev" parameterType="map" resultType="com.sp.app.model.CommunityReply">
		SELECT replyNum, subject
		FROM communityReply c
		schoolMember m ON c.studentId = m.userId
		<where>
			<if test="kwd != null and kwd != '' ">
				<include refid="where-list"/>
			</if>
			<![CDATA[
				AND ( (groupNum = #{groupNum} AND orderNo < #{orderNo})
					  OR (groupNum > #{groupNum}) )
			]]>
		</where>
		ORDER BY groupNum ASC, orderNo DESC
		FETCH FIRST 1 ROWS ONLY
	</select>
	
	<!-- 다음글 -->
	<select id="findByNext" parameterType="map" resultType="com.sp.app.model.CommunityReply">
		SELECT replyNum, subject
		FROM communityReply c
		JOIN schoolMember m ON c.studentId = m.userId
		<where>
			<if test="kwd != null and kwd != '' ">
				<include refid="where-list"/>
			</if>
			<![CDATA[
				AND ( (groupNum = #{groupNum} AND orderNo > #{orderNo})
					  OR (groupNum < #{groupNum}) )
			]]>
		</where>
		ORDER BY groupNum ASC, orderNo DESC
		FETCH FIRST 1 ROWS ONLY
	</select>
	
	<update id="updateOrderNo" parameterType="map">
		UPDATE communityReply SET orderNo = orderNo + 1
		WHERE groupNum = #{groupNum} AND orderNo &gt; #{orderNo}
	</update>
	
	<update id="updateBoard" parameterType="com.sp.app.model.CommunityReply">
		UPDATE communityReply SET subject = #{subject}, content = #{content}
		WHERE replyNum = #{replyNum} AND studentId = #{studentId}
	</update>
	
	<delete id="deleteBoard" parameterType="Long">
		DELETE FROM communityReply
		WHERE replyNum IN
			( SELECT replyNum FROM communityReply START WITH replyNum = #{replyNum}
				CONNECT BY PRIOR replyNum = parent )
	</delete>

</mapper>
