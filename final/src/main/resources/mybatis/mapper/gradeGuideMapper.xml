<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sp.app.mapper.GradeGuideMapper">
	  <!-- 학점안내 글 등록 -->
  <insert id="insertGradeGuide" parameterType="com.sp.app.model.GradeGuide">
    INSERT INTO gradeGuide 
      (gradeGuideNum, subject, content, hitCount, saveFilename, originalFilename, reg_date, modify_date, showGradeGuide, schoolId, categoryId)
    VALUES 
      (gradeGuide_seq.nextval, #{subject}, #{content}, 0, #{saveFilename, jdbcType=VARCHAR}, #{originalFilename, jdbcType=VARCHAR}, SYSDATE, SYSDATE, #{showGradeGuide}, #{schoolId}, #{categoryId})
  </insert>
  
  <!-- 학점안내 글 수정 -->
  <update id="updateGradeGuide" parameterType="com.sp.app.model.GradeGuide">
    UPDATE gradeGuide
    SET subject = #{subject},
        content = #{content},
        hitCount = #{hitCount},
        saveFilename = #{saveFilename},
        originalFilename = #{originalFilename},
        modify_date = SYSDATE,
        showGradeGuide = #{showGradeGuide},
        categoryId = #{categoryId}
    WHERE gradeGuideNum = #{gradeGuideNum}
  </update>
  
  <!-- 학점안내 글 삭제 -->
  <delete id="deleteGradeGuide" parameterType="long">
    DELETE FROM gradeGuide
    WHERE gradeGuideNum = #{gradeGuideNum}
  </delete>
  
  <!-- 단건 조회 (gradeGuideNum 기준) -->
  <select id="findGradeGuideById" parameterType="long" resultType="com.sp.app.model.GradeGuide">
    SELECT gradeGuideNum,
           subject,
           content,
           hitCount,
           saveFilename,
           originalFilename,
           TO_CHAR(reg_date, 'YYYY-MM-DD') AS reg_date,
           TO_CHAR(modify_date, 'YYYY-MM-DD') AS modify_date,
           showGradeGuide,
           schoolId,
           categoryId
    FROM gradeGuide
    WHERE gradeGuideNum = #{gradeGuideNum}
  </select>
  
  <!-- 조건에 따른 학점안내 글 목록 조회 -->
  <select id="listGradeGuide" parameterType="map" resultType="com.sp.app.model.GradeGuide">
    SELECT g.gradeGuideNum,
           g.subject,
           g.content,
           g.hitCount,
           g.saveFilename,
           g.originalFilename,
           TO_CHAR(g.reg_date, 'YYYY-MM-DD') AS reg_date,
           TO_CHAR(g.modify_date, 'YYYY-MM-DD') AS modify_date,
           g.showGradeGuide,
           g.schoolId,
           g.categoryId,
           c.categoryName
    FROM gradeGuide g
    LEFT JOIN gradeGuideCategory c ON g.categoryId = c.categoryId
  <where>
    <!-- 카테고리 필터 추가: 1이면 전체 -->
    <if test="categoryId != null and categoryId != 1">
      AND g.categoryId = #{categoryId}
    </if>  
    <if test="kwd != null and kwd != ''">
      AND (g.subject LIKE '%' || #{kwd} || '%' OR g.content LIKE '%' || #{kwd} || '%')
    </if>
  </where>
  ORDER BY g.gradeGuideNum DESC
  OFFSET #{offset} ROWS FETCH NEXT #{size} ROWS ONLY
</select>
  
  <!-- 데이터 건수 조회 (페이징 등) -->
  <select id="dataCount" parameterType="map" resultType="int">
	  SELECT NVL(COUNT(*), 0)
	  FROM gradeGuide g
	  JOIN schoolMember sm ON sm.schoolId = g.schoolId
	  <where>
	    <if test="categoryId != null and categoryId != 1">
	      AND g.categoryId = #{categoryId}
	    </if>			
	    <if test="kwd != null and kwd != ''">
	      AND ( <include refid="where-list"/> )
	    </if>
	  </where>   
	</select>
  
  <!-- 조회수 업데이트 -->
  <update id="updateHitCount" parameterType="long">
    UPDATE gradeGuide
    SET hitCount = hitCount + 1
    WHERE gradeGuideNum = #{gradeGuideNum}
  </update>
  
  <!-- 이전 글 조회 -->
  <select id="findByPrev" parameterType="map" resultType="com.sp.app.model.GradeGuide">
    SELECT *
    FROM (
      SELECT gradeGuideNum, subject, content, hitCount, saveFilename, originalFilename,
             TO_CHAR(reg_date, 'YYYY-MM-DD') AS reg_date,
             TO_CHAR(modify_date, 'YYYY-MM-DD') AS modify_date,
             showGradeGuide, schoolId, categoryId
      FROM gradeGuide
      <where>
         <if test="gradeGuideNum != null">
           AND gradeGuideNum &lt; #{gradeGuideNum}
         </if>
         <if test="kwd != null and kwd != ''">
           AND (subject LIKE '%' || #{kwd} || '%' OR content LIKE '%' || #{kwd} || '%')
         </if>
      </where>
      ORDER BY gradeGuideNum DESC
    )
    WHERE ROWNUM = 1
  </select>
  
  <!-- 다음 글 조회 -->
  <select id="findByNext" parameterType="map" resultType="com.sp.app.model.GradeGuide">
    SELECT *
    FROM (
      SELECT gradeGuideNum, subject, content, hitCount, saveFilename, originalFilename,
             TO_CHAR(reg_date, 'YYYY-MM-DD') AS reg_date,
             TO_CHAR(modify_date, 'YYYY-MM-DD') AS modify_date,
             showGradeGuide, schoolId, categoryId
      FROM gradeGuide
      <where>
         <if test="gradeGuideNum != null">
           AND gradeGuideNum &gt; #{gradeGuideNum}
         </if>
         <if test="kwd != null and kwd != ''">
           AND (subject LIKE '%' || #{kwd} || '%' OR content LIKE '%' || #{kwd} || '%')
         </if>
      </where>
      ORDER BY gradeGuideNum ASC
    )
    WHERE ROWNUM = 1
  </select>
  
  	<sql id="where-list">
		<choose>
			<when test="schType == 'all' ">
			   ( INSTR(subject, #{kwd}) &gt; 0
		          OR DBMS_LOB.INSTR(content, #{kwd}) &gt; 0 )
			</when>
			<when test="schType == 'reg_date' ">
			   ( TO_CHAR(reg_date, 'YYYYMMDD') = #{kwd}
		          OR TO_CHAR(reg_date, 'YYYY-MM-DD') = #{kwd} )
			</when>
			<when test="schType == 'content'">
			    DBMS_LOB.INSTR(content, #{kwd}) &gt; 0
			</when>
			<otherwise>
			    INSTR(${schType}, #{kwd}) &gt; 0
			</otherwise>
		</choose>
	</sql>
</mapper>