<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sp.app.mapper.QaMapper">
  <!-- 질문 등록 -->
  <insert id="insertQa" parameterType="com.sp.app.model.Qa">
    INSERT INTO qa 
      (qaNum, userId, title, question, reg_date, showQa)
    VALUES 
      (qa_seq.nextval, #{userId}, #{title}, #{question}, SYSDATE, #{showQa})
  </insert>
  
  <!-- 질문 수정 -->
  <update id="updateQa" parameterType="com.sp.app.model.Qa">
    UPDATE qa
    SET title = #{title},
        question = #{question},
        showQa = #{showQa}
    WHERE qaNum = #{qaNum} AND userId = #{userId}
  </update>
  
  <!-- 답변 등록 -->
	<update id="updateAnswer" parameterType="com.sp.app.model.Qa">
	    UPDATE qa 
	    SET answer = #{answer, jdbcType=VARCHAR},
	    teacherUserId = #{teacherUserId, jdbcType=VARCHAR},
	        <choose>
	            <when test="answer != null and answer != '' ">answer_date = SYSDATE</when>
	            <otherwise>answer_date = NULL</otherwise>
	        </choose>	
	    WHERE qaNum = #{qaNum}
	</update>

  <!-- Q&A 삭제 (PK 기준) -->
  <delete id="deleteQa" parameterType="long">
    DELETE FROM qa
    WHERE qaNum = #{qaNum}
  </delete>
  
  <!-- Q&A 단건 조회 (qaNum 기준) -->
  <select id="findQaById" parameterType="long" resultType="com.sp.app.model.Qa">
    SELECT qaNum,
		   userId,
           studentId,
           question,
           answer,
           title,
           teacherUserId,
           TO_CHAR(reg_date, 'YYYY-MM-DD') AS reg_date,
           TO_CHAR(answer_date, 'YYYY-MM-DD') AS answer_date,	
           showQa
    FROM qa
    WHERE qaNum = #{qaNum}
  </select>
  
  <!-- 조건에 따른 Q&A 목록 조회 -->
  <select id="listQa" parameterType="map" resultType="com.sp.app.model.Qa">
    SELECT qaNum,
           userId,
           studentId,
           question,
           answer,
           title,
           teacherUserId,
           TO_CHAR(reg_date, 'YYYY-MM-DD') AS reg_date,
           TO_CHAR(answer_date, 'YYYY-MM-DD') AS answer_date,
           showQa
    FROM qa
    ORDER BY qaNum DESC
  </select>
  
  <!-- 조건에 따른 데이터 건수 조회 (페이징 등에서 활용) -->
  <select id="dataCount" parameterType="map" resultType="int">
	SELECT NVL(COUNT(*), 0)
	FROM qa q
	JOIN schoolMember m ON q.userId = m.userId
  </select>
</mapper>